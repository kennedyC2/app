# generated 2023-12-29, Mozilla Guideline v5.7, nginx 1.25.3, OpenSSL 1.1.1k, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.25.3&config=intermediate&openssl=1.1.1k&guideline=5.7
# user                 www-data;
pid                  /run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

events {
    multi_accept       on;
    worker_connections 65535;  ## Default: 1024
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;

    include    /etc/nginx/mime.types;
    index    index.html index.htm index.php;

    server {
        listen 5506;
        # listen [::]:80;
        server_name  localhost;
        
        location /api {
            proxy_pass   http://makkie:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name   kennedyc.me  www.kennedyc.me;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name   medsoph.kennedyc.me;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name   makkie.kennedyc.me;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ===================================================================================

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2  on;
        server_name   kennedyc.me  www.kennedyc.me;

        location / {
            proxy_pass   http://personal:3000;
        }

        ssl_certificate  /etc/letsencrypt/live/kennedyc.me/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/kennedyc.me/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # replace with the IP address of your resolver
        resolver 8.8.8.8;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2  on;
        server_name   medsoph.kennedyc.me;

        location / {
            proxy_pass   http://medsoph_fd:8000;
        }

        ssl_certificate  /etc/letsencrypt/live/medsoph.kennedyc.me/fullchain.pem;
        ssl_certificate_key   /etc/letsencrypt/live/medsoph.kennedyc.me/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # replace with the IP address of your resolver
        resolver 8.8.8.8;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2  on;
        server_name   makkie.kennedyc.me;

        location / {
            proxy_pass   http://makkie_fd:7000;
        }

        ssl_certificate   /etc/letsencrypt/live/makkie.kennedyc.me/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/makkie.kennedyc.me/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # replace with the IP address of your resolver
        resolver 8.8.8.8;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2  on;
        server_name   laviosa.kennedyc.me;

        location / {
            proxy_pass   http://mongo-express:8081;
        }

        ssl_certificate  /etc/letsencrypt/live/laviosa.kennedyc.me/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/laviosa.kennedyc.me/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # replace with the IP address of your resolver
        resolver 8.8.8.8;
    }
}